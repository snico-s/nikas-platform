// Generated by ts-to-zod
import { z } from "zod"

export const bBoxSchema = z.union([
  z.tuple([z.number(), z.number(), z.number(), z.number()]),
  z.tuple([
    z.number(),
    z.number(),
    z.number(),
    z.number(),
    z.number(),
    z.number(),
  ]),
])

export const geoJsonObjectSchema = z.object({
  type: z.literal("LineString"),
  bbox: z.union([bBoxSchema, z.undefined()]).optional(),
})

export const positionSchema = z.array(z.number())

export const lineStringSchema = geoJsonObjectSchema.extend({
  type: z.literal("LineString"),
  coordinates: z.array(positionSchema),
})

export const lineStringPropertiesSchema = z.record(z.any()).and(
  z.object({
    time: z.string(),
    coordinateProperties: z.object({
      times: z.array(z.string()),
    }),
  })
)

export const featureWithLineStringSchema = z.object({
  type: z.literal("Feature"),
  id: z.any().optional(),
  properties: lineStringPropertiesSchema,
  geometry: lineStringSchema,
})

export const trackCreateSchema = z.object({
  track: featureWithLineStringSchema,
  distance: z.number(),
  date: z.date(),
  id: z.string().optional(),
})
